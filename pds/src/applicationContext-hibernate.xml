<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" /> <!-- 修改数据源为c3p0 -->
		</property>
		
<!--	
		hibernate.cache.use_second_level_cache=true
		hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider 
		开启二级缓存并指定二级缓存为ehcache
		
		hibernate.cache.use_query_cache=true 为查询创建二级缓存
-->
<!-- 
	hibernate.hbm2ddl.auto参数说明  
                validate           加载hibernate时，验证创建数据库表结构  
                create             每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。  
                create-drop        加载hibernate时创建，退出是删除表结构  
                update             加载hibernate自动更新数据库结构  
                none               不更新数据库结构  
 -->
 
 <!-- 
 	//TODO 正式发布时hibernate.hbm2ddl.auto要改为none 或 删除此属性
  -->
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQLDialect
				hibernate.show_sql=true
				hibernate.format_sql=false
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider 
				hibernate.cache.use_query_cache=true
				hibernate.hbm2ddl.auto=update
			</value>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.pds.model.AboutUs</value>
				<value>com.pds.model.CampusStyle</value>
				<value>com.pds.model.Criticism</value>
				<value>com.pds.model.Departments</value>
				<value>com.pds.model.FileUD</value>
				<value>com.pds.model.HotArticle</value>
				<value>com.pds.model.Link</value>
				<value>com.pds.model.Message</value>
				<value>com.pds.model.Reply</value>
				<value>com.pds.model.News</value>
				<value>com.pds.model.BackgroundUser</value>
				<value>com.pds.model.Role</value>
				<value>com.pds.model.Rules</value>
				<value>com.pds.model.UnionShow</value>
			</list>
		</property>
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- 配置事务的传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="register*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 那些类的哪些方法参与事务 -->
<!--	<aop:config>-->
<!--		<aop:pointcut id="allServiceMethod" expression="execution(* com.x.service.*.*(..))" />-->
<!--		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />-->
<!--	</aop:config>-->
	
	<!-- //TODO正式的用com.pds.包名前缀 -->
	<aop:config>
		<aop:pointcut id="allServiceMethod" expression="execution(* com.pds.service.*.*(..))" />
		<aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
	</aop:config>

</beans>